<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="95" passed="88" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-05T16:56:50 IST" name="Suite" finished-at="2024-03-05T17:01:34 IST" duration-ms="283627">
    <groups>
    </groups>
    <test started-at="2024-03-05T16:56:50 IST" name="Test" finished-at="2024-03-05T17:01:34 IST" duration-ms="283627">
      <class name="com.testscripts.LoginWithNewEmailTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:26 IST" name="setup" finished-at="2024-03-05T17:00:30 IST" duration-ms="3693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ValidateSigninWithNewEmail([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:30 IST" name="ValidateSigninWithNewEmail" data-provider="emailtestdata" finished-at="2024-03-05T17:00:31 IST" duration-ms="824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@56554365]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateSigninWithNewEmail -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:31 IST" name="teardown" finished-at="2024-03-05T17:00:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateSigninWithNewEmail status=SUCCESS method=LoginWithNewEmailTest.ValidateSigninWithNewEmail([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateCoupon_Email([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:31 IST" name="ValidateCoupon_Email" data-provider="emailtestdata" finished-at="2024-03-05T17:00:32 IST" duration-ms="1062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@508b4f70]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateCoupon_Email -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:32 IST" name="teardown" finished-at="2024-03-05T17:00:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCoupon_Email status=SUCCESS method=LoginWithNewEmailTest.ValidateCoupon_Email([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateEmailDisable_Email()[pri:3, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:32 IST" name="ValidateEmailDisable_Email" finished-at="2024-03-05T17:00:32 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateEmailDisable_Email -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:32 IST" name="teardown" finished-at="2024-03-05T17:00:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEmailDisable_Email status=SUCCESS method=LoginWithNewEmailTest.ValidateEmailDisable_Email()[pri:3, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateWhatsappCheckbox([Ljava.lang.String;)[pri:4, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:32 IST" name="validateWhatsappCheckbox" data-provider="emailtestdata" finished-at="2024-03-05T17:00:33 IST" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@42fa5cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsappCheckbox -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:33 IST" name="teardown" finished-at="2024-03-05T17:00:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWhatsappCheckbox status=SUCCESS method=LoginWithNewEmailTest.validateWhatsappCheckbox([Ljava.lang.String;)[pri:4, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAttendeeEmail([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:33 IST" name="validateAttendeeEmail" data-provider="emailtestdata" finished-at="2024-03-05T17:00:33 IST" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7dfec0bc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAttendeeEmail -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:33 IST" name="teardown" finished-at="2024-03-05T17:00:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAttendeeEmail status=SUCCESS method=LoginWithNewEmailTest.validateAttendeeEmail([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderSuccessMessage()[pri:6, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:33 IST" name="validateOrderSuccessMessage" finished-at="2024-03-05T17:00:50 IST" duration-ms="17305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderSuccessMessage -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:50 IST" name="teardown" finished-at="2024-03-05T17:00:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderSuccessMessage status=SUCCESS method=LoginWithNewEmailTest.validateOrderSuccessMessage()[pri:6, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderifVip_email()[pri:7, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:50 IST" name="validateOrderifVip_email" finished-at="2024-03-05T17:00:51 IST" duration-ms="855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderifVip_email -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:51 IST" name="teardown" finished-at="2024-03-05T17:00:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderifVip_email status=SUCCESS method=LoginWithNewEmailTest.validateOrderifVip_email()[pri:7, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateOrderIdFree_email()[pri:8, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:51 IST" name="ValidateOrderIdFree_email" finished-at="2024-03-05T17:00:52 IST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateOrderIdFree_email -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:52 IST" name="teardown" finished-at="2024-03-05T17:00:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateOrderIdFree_email status=SUCCESS method=LoginWithNewEmailTest.ValidateOrderIdFree_email()[pri:8, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAttendeeRegistration_Vip([Ljava.lang.String;)[pri:9, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:52 IST" name="validateAttendeeRegistration_Vip" data-provider="emailtestdata" finished-at="2024-03-05T17:00:56 IST" duration-ms="4175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@726d8fa0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAttendeeRegistration_Vip -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e]" started-at="2024-03-05T17:00:56 IST" name="teardown" finished-at="2024-03-05T17:00:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAttendeeRegistration_Vip status=SUCCESS method=LoginWithNewEmailTest.validateAttendeeRegistration_Vip([Ljava.lang.String;)[pri:9, instance:com.testscripts.LoginWithNewEmailTest@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testscripts.LoginWithNewEmailTest -->
      <class name="com.testscripts.LoginWithNewMailAmazonPayTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:16 IST" name="setup" finished-at="2024-03-05T17:01:19 IST" duration-ms="3334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ValidateSigninWithNewEmail_upiPay([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:19 IST" name="ValidateSigninWithNewEmail_upiPay" data-provider="emailtestdata" finished-at="2024-03-05T17:01:20 IST" duration-ms="966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@52b891de]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateSigninWithNewEmail_upiPay -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:20 IST" name="teardown" finished-at="2024-03-05T17:01:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateSigninWithNewEmail_upiPay status=SUCCESS method=LoginWithNewMailAmazonPayTest.ValidateSigninWithNewEmail_upiPay([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateCoupon_Email([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:20 IST" name="ValidateCoupon_Email" data-provider="emailtestdata" finished-at="2024-03-05T17:01:21 IST" duration-ms="891" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@776a7ec6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateCoupon_Email -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="teardown" finished-at="2024-03-05T17:01:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCoupon_Email status=SUCCESS method=LoginWithNewMailAmazonPayTest.ValidateCoupon_Email([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateCouponRemove()[pri:3, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="validateCouponRemove" finished-at="2024-03-05T17:01:21 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponRemove -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="teardown" finished-at="2024-03-05T17:01:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponRemove status=SUCCESS method=LoginWithNewMailAmazonPayTest.validateCouponRemove()[pri:3, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateEmailDisable_Email()[pri:4, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="ValidateEmailDisable_Email" finished-at="2024-03-05T17:01:21 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateEmailDisable_Email -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="teardown" finished-at="2024-03-05T17:01:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEmailDisable_Email status=SUCCESS method=LoginWithNewMailAmazonPayTest.ValidateEmailDisable_Email()[pri:4, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateWhatsappCheckbox([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="validateWhatsappCheckbox" data-provider="emailtestdata" finished-at="2024-03-05T17:01:21 IST" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@32f14274]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsappCheckbox -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="teardown" finished-at="2024-03-05T17:01:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWhatsappCheckbox status=SUCCESS method=LoginWithNewMailAmazonPayTest.validateWhatsappCheckbox([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAttendeeEmail([Ljava.lang.String;)[pri:6, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="validateAttendeeEmail" data-provider="emailtestdata" finished-at="2024-03-05T17:01:21 IST" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@44e4cf8a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAttendeeEmail -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="teardown" finished-at="2024-03-05T17:01:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAttendeeEmail status=SUCCESS method=LoginWithNewMailAmazonPayTest.validateAttendeeEmail([Ljava.lang.String;)[pri:6, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePaymentUrl()[pri:7, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:21 IST" name="validatePaymentUrl" finished-at="2024-03-05T17:01:22 IST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentUrl -->
        <test-method signature="validatePhonepe()[pri:8, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:22 IST" name="validatePhonepe" finished-at="2024-03-05T17:01:24 IST" duration-ms="2495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePhonepe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:22 IST" name="teardown" finished-at="2024-03-05T17:01:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePaymentUrl status=SUCCESS method=LoginWithNewMailAmazonPayTest.validatePaymentUrl()[pri:7, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:24 IST" name="teardown" finished-at="2024-03-05T17:01:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePhonepe status=SUCCESS method=LoginWithNewMailAmazonPayTest.validatePhonepe()[pri:8, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAmazonPe()[pri:9, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:24 IST" name="validateAmazonPe" finished-at="2024-03-05T17:01:24 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonPe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:24 IST" name="teardown" finished-at="2024-03-05T17:01:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmazonPe status=SUCCESS method=LoginWithNewMailAmazonPayTest.validateAmazonPe()[pri:9, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAmazonOrderMessage([Ljava.lang.String;)[pri:10, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:24 IST" name="validateAmazonOrderMessage" data-provider="emailtestdata" finished-at="2024-03-05T17:01:33 IST" duration-ms="8298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@50930bff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonOrderMessage -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:33 IST" name="teardown" finished-at="2024-03-05T17:01:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmazonOrderMessage status=SUCCESS method=LoginWithNewMailAmazonPayTest.validateAmazonOrderMessage([Ljava.lang.String;)[pri:10, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateRegisterBtn()[pri:11, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:33 IST" name="validateRegisterBtn" finished-at="2024-03-05T17:01:33 IST" duration-ms="28" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at com.pages.LoginWithExistingEmailUpiPayment.verifyCompleteRegisterbutton(LoginWithExistingEmailUpiPayment.java:178)
at com.testscripts.LoginWithNewMailAmazonPayTest.validateRegisterBtn(LoginWithNewMailAmazonPayTest.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegisterBtn -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:33 IST" name="teardown" finished-at="2024-03-05T17:01:33 IST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegisterBtn status=FAILURE method=LoginWithNewMailAmazonPayTest.validateRegisterBtn()[pri:11, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdVip_amazonpay()[pri:12, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:33 IST" name="validateOrderIdVip_amazonpay" finished-at="2024-03-05T17:01:33 IST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdVip_amazonpay -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:33 IST" name="teardown" finished-at="2024-03-05T17:01:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdVip_amazonpay status=SUCCESS method=LoginWithNewMailAmazonPayTest.validateOrderIdVip_amazonpay()[pri:12, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdFree_amazonpay()[pri:13, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:33 IST" name="validateOrderIdFree_amazonpay" finished-at="2024-03-05T17:01:34 IST" duration-ms="793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdFree_amazonpay -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488]" started-at="2024-03-05T17:01:34 IST" name="teardown" finished-at="2024-03-05T17:01:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdFree_amazonpay status=SUCCESS method=LoginWithNewMailAmazonPayTest.validateOrderIdFree_amazonpay()[pri:13, instance:com.testscripts.LoginWithNewMailAmazonPayTest@3c77d488] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testscripts.LoginWithNewMailAmazonPayTest -->
      <class name="com.testscripts.LoginWithExistingEmailFreeTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:27 IST" name="setup" finished-at="2024-03-05T16:59:30 IST" duration-ms="3360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateMobileWithExistingEmail_free([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:30 IST" name="validateMobileWithExistingEmail_free" data-provider="dataFetch" finished-at="2024-03-05T16:59:31 IST" duration-ms="923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@1ddba7a0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMobileWithExistingEmail_free -->
        <test-method signature="validateDisableEmail__freeExistingEmail([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:31 IST" name="validateDisableEmail__freeExistingEmail" data-provider="dataFetch" finished-at="2024-03-05T16:59:32 IST" duration-ms="596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3a45308f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisableEmail__freeExistingEmail -->
        <test-method signature="validateOrderConfirmation__freeExistingEmail([Ljava.lang.String;)[pri:3, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:32 IST" name="validateOrderConfirmation__freeExistingEmail" data-provider="dataFetch" finished-at="2024-03-05T16:59:32 IST" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6fdb1a59]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderConfirmation__freeExistingEmail -->
        <test-method signature="validateWhatsappIsPresent_freeExistingEmail()[pri:4, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:32 IST" name="validateWhatsappIsPresent_freeExistingEmail" finished-at="2024-03-05T16:59:32 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsappIsPresent_freeExistingEmail -->
        <test-method signature="validateOrderSuccessPage_freeExistingEmail()[pri:5, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:32 IST" name="validateOrderSuccessPage_freeExistingEmail" finished-at="2024-03-05T16:59:44 IST" duration-ms="11807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderSuccessPage_freeExistingEmail -->
        <test-method signature="validateOrderID_freeExistingEmail()[pri:6, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:44 IST" name="validateOrderID_freeExistingEmail" finished-at="2024-03-05T16:59:44 IST" duration-ms="567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderID_freeExistingEmail -->
        <test-method signature="verifyBuyerdetails_Mbfree([Ljava.lang.String;)[pri:7, instance:com.testscripts.LoginWithExistingEmailFreeTest@1a6d8329]" started-at="2024-03-05T16:59:44 IST" name="verifyBuyerdetails_Mbfree" data-provider="dataFetch" finished-at="2024-03-05T16:59:46 IST" duration-ms="1665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@70e54ec3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBuyerdetails_Mbfree -->
      </class> <!-- com.testscripts.LoginWithExistingEmailFreeTest -->
      <class name="com.testscripts.LoginGoogleAmazonPayTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:28 IST" name="setup" finished-at="2024-03-05T16:58:32 IST" duration-ms="3551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateDisableEmail_google_Upi([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:32 IST" name="validateDisableEmail_google_Upi" data-provider="dataFetch" finished-at="2024-03-05T16:58:45 IST" duration-ms="12679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5c34b0f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisableEmail_google_Upi -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="teardown" finished-at="2024-03-05T16:58:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDisableEmail_google_Upi status=SUCCESS method=LoginGoogleAmazonPayTest.validateDisableEmail_google_Upi([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateWhatsappConfigEnable_UPi([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="ValidateWhatsappConfigEnable_UPi" data-provider="dataFetch" finished-at="2024-03-05T16:58:45 IST" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@64b8eb96]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateWhatsappConfigEnable_UPi -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="teardown" finished-at="2024-03-05T16:58:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateWhatsappConfigEnable_UPi status=SUCCESS method=LoginGoogleAmazonPayTest.ValidateWhatsappConfigEnable_UPi([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateTicketForAttendee_google_upi([Ljava.lang.String;)[pri:3, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="validateTicketForAttendee_google_upi" data-provider="dataFetch" finished-at="2024-03-05T16:58:45 IST" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@52ccf197]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketForAttendee_google_upi -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="teardown" finished-at="2024-03-05T16:58:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketForAttendee_google_upi status=SUCCESS method=LoginGoogleAmazonPayTest.validateTicketForAttendee_google_upi([Ljava.lang.String;)[pri:3, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePaymentUrl()[pri:4, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="validatePaymentUrl" finished-at="2024-03-05T16:58:45 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentUrl -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="teardown" finished-at="2024-03-05T16:58:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePaymentUrl status=SUCCESS method=LoginGoogleAmazonPayTest.validatePaymentUrl()[pri:4, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePhonepe()[pri:5, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:45 IST" name="validatePhonepe" finished-at="2024-03-05T16:58:48 IST" duration-ms="2648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePhonepe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:48 IST" name="teardown" finished-at="2024-03-05T16:58:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePhonepe status=SUCCESS method=LoginGoogleAmazonPayTest.validatePhonepe()[pri:5, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAmazonPe()[pri:6, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:48 IST" name="validateAmazonPe" finished-at="2024-03-05T16:58:48 IST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonPe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:48 IST" name="teardown" finished-at="2024-03-05T16:58:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmazonPe status=SUCCESS method=LoginGoogleAmazonPayTest.validateAmazonPe()[pri:6, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatephoenpeOrderMessage([Ljava.lang.String;)[pri:7, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:48 IST" name="validatephoenpeOrderMessage" data-provider="emailtestdata" finished-at="2024-03-05T16:58:56 IST" duration-ms="8151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3ea6faf0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatephoenpeOrderMessage -->
        <test-method signature="validateRegisterBtn()[pri:8, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:56 IST" name="validateRegisterBtn" finished-at="2024-03-05T16:59:26 IST" duration-ms="30064" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[@onclick='return OpenCompleteProfile(this);']"}
  (Session info: chrome=122.0.6261.95)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'WINDOWS-I42JNHR', ip: '192.168.0.111', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 122.0.6261.95, chrome: {chromedriverVersion: 121.0.6167.184 (057a8ae7deb..., userDataDir: C:\Users\COREVA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49844}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3027ba424f22d5a60eb752c1bfed565b
*** Element info: {Using=xpath, value=//button[@onclick='return OpenCompleteProfile(this);']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[@onclick='return OpenCompleteProfile(this);']"}
  (Session info: chrome=122.0.6261.95)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'WINDOWS-I42JNHR', ip: '192.168.0.111', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 122.0.6261.95, chrome: {chromedriverVersion: 121.0.6167.184 (057a8ae7deb..., userDataDir: C:\Users\COREVA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49844}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3027ba424f22d5a60eb752c1bfed565b
*** Element info: {Using=xpath, value=//button[@onclick='return OpenCompleteProfile(this);']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.isDisplayed(Unknown Source)
at com.pages.LoginWithExistingEmailUpiPayment.verifyCompleteRegisterbutton(LoginWithExistingEmailUpiPayment.java:177)
at com.testscripts.LoginGoogleAmazonPayTest.validateRegisterBtn(LoginGoogleAmazonPayTest.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegisterBtn -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:58:56 IST" name="teardown" finished-at="2024-03-05T16:58:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatephoenpeOrderMessage status=SUCCESS method=LoginGoogleAmazonPayTest.validatephoenpeOrderMessage([Ljava.lang.String;)[pri:7, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:59:26 IST" name="teardown" finished-at="2024-03-05T16:59:26 IST" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegisterBtn status=FAILURE method=LoginGoogleAmazonPayTest.validateRegisterBtn()[pri:8, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdVip()[pri:9, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:59:26 IST" name="validateOrderIdVip" finished-at="2024-03-05T16:59:27 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdVip -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9]" started-at="2024-03-05T16:59:27 IST" name="teardown" finished-at="2024-03-05T16:59:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdVip status=SUCCESS method=LoginGoogleAmazonPayTest.validateOrderIdVip()[pri:9, instance:com.testscripts.LoginGoogleAmazonPayTest@368247b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testscripts.LoginGoogleAmazonPayTest -->
      <class name="com.testscripts.LoginWithExistingEmailAmazonPayTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:05 IST" name="setup" finished-at="2024-03-05T17:00:10 IST" duration-ms="4753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateLogin([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:10 IST" name="validateLogin" data-provider="emailtestdata" finished-at="2024-03-05T17:00:11 IST" duration-ms="934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3d73cd78]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogin -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:11 IST" name="teardown" finished-at="2024-03-05T17:00:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLogin status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateLogin([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateCoupon([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:11 IST" name="validateCoupon" data-provider="emailtestdata" finished-at="2024-03-05T17:00:12 IST" duration-ms="1060" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@296bfddb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCoupon -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="teardown" finished-at="2024-03-05T17:00:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCoupon status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateCoupon([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateEmailDisable()[pri:3, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="validateEmailDisable" finished-at="2024-03-05T17:00:12 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEmailDisable -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="teardown" finished-at="2024-03-05T17:00:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEmailDisable status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateEmailDisable()[pri:3, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateCouponRemove()[pri:4, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="validateCouponRemove" finished-at="2024-03-05T17:00:12 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponRemove -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="teardown" finished-at="2024-03-05T17:00:12 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponRemove status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateCouponRemove()[pri:4, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateBuyForSomeone([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="validateBuyForSomeone" data-provider="emailtestdata" finished-at="2024-03-05T17:00:12 IST" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@c86c486]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBuyForSomeone -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="teardown" finished-at="2024-03-05T17:00:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBuyForSomeone status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateBuyForSomeone([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateWhatsappIsPresent([Ljava.lang.String;)[pri:6, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:12 IST" name="validateWhatsappIsPresent" data-provider="emailtestdata" finished-at="2024-03-05T17:00:13 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@67cd84f9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsappIsPresent -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:13 IST" name="teardown" finished-at="2024-03-05T17:00:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWhatsappIsPresent status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateWhatsappIsPresent([Ljava.lang.String;)[pri:6, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePaymentUrl()[pri:7, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:13 IST" name="validatePaymentUrl" finished-at="2024-03-05T17:00:13 IST" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentUrl -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:13 IST" name="teardown" finished-at="2024-03-05T17:00:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePaymentUrl status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validatePaymentUrl()[pri:7, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePhonepe()[pri:8, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:13 IST" name="validatePhonepe" finished-at="2024-03-05T17:00:16 IST" duration-ms="3158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePhonepe -->
        <test-method signature="validateAmazonPe()[pri:9, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:16 IST" name="validateAmazonPe" finished-at="2024-03-05T17:00:16 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonPe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:16 IST" name="teardown" finished-at="2024-03-05T17:00:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePhonepe status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validatePhonepe()[pri:8, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:16 IST" name="teardown" finished-at="2024-03-05T17:00:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmazonPe status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateAmazonPe()[pri:9, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAmazonOrderMessage([Ljava.lang.String;)[pri:10, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:16 IST" name="validateAmazonOrderMessage" data-provider="emailtestdata" finished-at="2024-03-05T17:00:25 IST" duration-ms="8252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@12eaa2cd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonOrderMessage -->
        <test-method signature="validateRegisterBtn()[pri:11, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:25 IST" name="validateRegisterBtn" finished-at="2024-03-05T17:00:25 IST" duration-ms="42" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at com.pages.LoginWithExistingEmailUpiPayment.verifyCompleteRegisterbutton(LoginWithExistingEmailUpiPayment.java:178)
at com.testscripts.LoginWithExistingEmailAmazonPayTest.validateRegisterBtn(LoginWithExistingEmailAmazonPayTest.java:117)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegisterBtn -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:25 IST" name="teardown" finished-at="2024-03-05T17:00:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmazonOrderMessage status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateAmazonOrderMessage([Ljava.lang.String;)[pri:10, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:25 IST" name="teardown" finished-at="2024-03-05T17:00:25 IST" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegisterBtn status=FAILURE method=LoginWithExistingEmailAmazonPayTest.validateRegisterBtn()[pri:11, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdVip_amazonpay()[pri:12, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:25 IST" name="validateOrderIdVip_amazonpay" finished-at="2024-03-05T17:00:26 IST" duration-ms="833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdVip_amazonpay -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:26 IST" name="teardown" finished-at="2024-03-05T17:00:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdVip_amazonpay status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateOrderIdVip_amazonpay()[pri:12, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdFree_amazonpay()[pri:13, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:26 IST" name="validateOrderIdFree_amazonpay" finished-at="2024-03-05T17:00:26 IST" duration-ms="807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdFree_amazonpay -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc]" started-at="2024-03-05T17:00:26 IST" name="teardown" finished-at="2024-03-05T17:00:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdFree_amazonpay status=SUCCESS method=LoginWithExistingEmailAmazonPayTest.validateOrderIdFree_amazonpay()[pri:13, instance:com.testscripts.LoginWithExistingEmailAmazonPayTest@55a147cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testscripts.LoginWithExistingEmailAmazonPayTest -->
      <class name="com.testscripts.LoginWithExistingEmailUpiPayTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:46 IST" name="setup" finished-at="2024-03-05T16:59:50 IST" duration-ms="4000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateLogin([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:50 IST" name="validateLogin" data-provider="emailtestdata" finished-at="2024-03-05T16:59:51 IST" duration-ms="1092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2d23a5be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogin -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:51 IST" name="teardown" finished-at="2024-03-05T16:59:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLogin status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateLogin([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateCoupon([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:51 IST" name="validateCoupon" data-provider="emailtestdata" finished-at="2024-03-05T16:59:52 IST" duration-ms="916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3cc817bd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCoupon -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="teardown" finished-at="2024-03-05T16:59:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCoupon status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateCoupon([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateEmailDisable()[pri:3, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="validateEmailDisable" finished-at="2024-03-05T16:59:52 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEmailDisable -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="teardown" finished-at="2024-03-05T16:59:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEmailDisable status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateEmailDisable()[pri:3, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateCouponRemove()[pri:4, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="validateCouponRemove" finished-at="2024-03-05T16:59:52 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponRemove -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="teardown" finished-at="2024-03-05T16:59:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponRemove status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateCouponRemove()[pri:4, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateBuyForSomeone([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="validateBuyForSomeone" data-provider="emailtestdata" finished-at="2024-03-05T16:59:52 IST" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@54530644]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBuyForSomeone -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="teardown" finished-at="2024-03-05T16:59:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBuyForSomeone status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateBuyForSomeone([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateWhatsappIsPresent([Ljava.lang.String;)[pri:6, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="validateWhatsappIsPresent" data-provider="emailtestdata" finished-at="2024-03-05T16:59:52 IST" duration-ms="334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@acd115d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsappIsPresent -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="teardown" finished-at="2024-03-05T16:59:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWhatsappIsPresent status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateWhatsappIsPresent([Ljava.lang.String;)[pri:6, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePaymentUrl()[pri:7, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:52 IST" name="validatePaymentUrl" finished-at="2024-03-05T16:59:53 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentUrl -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:53 IST" name="teardown" finished-at="2024-03-05T16:59:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePaymentUrl status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validatePaymentUrl()[pri:7, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePhonepe()[pri:8, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:53 IST" name="validatePhonepe" finished-at="2024-03-05T16:59:55 IST" duration-ms="2571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePhonepe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:55 IST" name="teardown" finished-at="2024-03-05T16:59:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePhonepe status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validatePhonepe()[pri:8, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAmazonPe()[pri:9, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:55 IST" name="validateAmazonPe" finished-at="2024-03-05T16:59:55 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonPe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:55 IST" name="teardown" finished-at="2024-03-05T16:59:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmazonPe status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateAmazonPe()[pri:9, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatephoenpeOrderMessage([Ljava.lang.String;)[pri:10, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T16:59:55 IST" name="validatephoenpeOrderMessage" data-provider="emailtestdata" finished-at="2024-03-05T17:00:04 IST" duration-ms="8483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7af56b26]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatephoenpeOrderMessage -->
        <test-method signature="validateRegisterBtn()[pri:11, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T17:00:04 IST" name="validateRegisterBtn" finished-at="2024-03-05T17:00:04 IST" duration-ms="43" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at com.pages.LoginWithExistingEmailUpiPayment.verifyCompleteRegisterbutton(LoginWithExistingEmailUpiPayment.java:178)
at com.testscripts.LoginWithExistingEmailUpiPayTest.validateRegisterBtn(LoginWithExistingEmailUpiPayTest.java:113)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegisterBtn -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T17:00:04 IST" name="teardown" finished-at="2024-03-05T17:00:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatephoenpeOrderMessage status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validatephoenpeOrderMessage([Ljava.lang.String;)[pri:10, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T17:00:04 IST" name="teardown" finished-at="2024-03-05T17:00:04 IST" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegisterBtn status=FAILURE method=LoginWithExistingEmailUpiPayTest.validateRegisterBtn()[pri:11, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdVip()[pri:12, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T17:00:04 IST" name="validateOrderIdVip" finished-at="2024-03-05T17:00:05 IST" duration-ms="539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdVip -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T17:00:05 IST" name="teardown" finished-at="2024-03-05T17:00:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdVip status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateOrderIdVip()[pri:12, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdFree()[pri:13, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T17:00:05 IST" name="validateOrderIdFree" finished-at="2024-03-05T17:00:05 IST" duration-ms="825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdFree -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18]" started-at="2024-03-05T17:00:05 IST" name="teardown" finished-at="2024-03-05T17:00:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdFree status=SUCCESS method=LoginWithExistingEmailUpiPayTest.validateOrderIdFree()[pri:13, instance:com.testscripts.LoginWithExistingEmailUpiPayTest@1a942c18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testscripts.LoginWithExistingEmailUpiPayTest -->
      <class name="com.testscripts.LoginGoogleUPIPaidTicketTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:30 IST" name="setup" finished-at="2024-03-05T16:57:34 IST" duration-ms="3691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateDisableEmail_google_Upi([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:34 IST" name="validateDisableEmail_google_Upi" data-provider="dataFetch" finished-at="2024-03-05T16:57:46 IST" duration-ms="11828" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@67ceaa9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisableEmail_google_Upi -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="teardown" finished-at="2024-03-05T16:57:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDisableEmail_google_Upi status=SUCCESS method=LoginGoogleUPIPaidTicketTest.validateDisableEmail_google_Upi([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateWhatsappConfigEnable_UPi([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="ValidateWhatsappConfigEnable_UPi" data-provider="dataFetch" finished-at="2024-03-05T16:57:46 IST" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@55c341d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateWhatsappConfigEnable_UPi -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="teardown" finished-at="2024-03-05T16:57:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateWhatsappConfigEnable_UPi status=SUCCESS method=LoginGoogleUPIPaidTicketTest.ValidateWhatsappConfigEnable_UPi([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateTicketForAttendee_google_upi([Ljava.lang.String;)[pri:3, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="validateTicketForAttendee_google_upi" data-provider="dataFetch" finished-at="2024-03-05T16:57:46 IST" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@666b1244]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketForAttendee_google_upi -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="teardown" finished-at="2024-03-05T16:57:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketForAttendee_google_upi status=SUCCESS method=LoginGoogleUPIPaidTicketTest.validateTicketForAttendee_google_upi([Ljava.lang.String;)[pri:3, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatePaymentUrl()[pri:4, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="validatePaymentUrl" finished-at="2024-03-05T16:57:46 IST" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentUrl -->
        <test-method signature="validatePhonepe()[pri:5, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="validatePhonepe" finished-at="2024-03-05T16:57:49 IST" duration-ms="2622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePhonepe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:46 IST" name="teardown" finished-at="2024-03-05T16:57:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePaymentUrl status=SUCCESS method=LoginGoogleUPIPaidTicketTest.validatePaymentUrl()[pri:4, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:49 IST" name="teardown" finished-at="2024-03-05T16:57:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePhonepe status=SUCCESS method=LoginGoogleUPIPaidTicketTest.validatePhonepe()[pri:5, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateAmazonPe()[pri:6, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:49 IST" name="validateAmazonPe" finished-at="2024-03-05T16:57:49 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonPe -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:49 IST" name="teardown" finished-at="2024-03-05T16:57:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmazonPe status=SUCCESS method=LoginGoogleUPIPaidTicketTest.validateAmazonPe()[pri:6, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validatephoenpeOrderMessage([Ljava.lang.String;)[pri:7, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:49 IST" name="validatephoenpeOrderMessage" data-provider="emailtestdata" finished-at="2024-03-05T16:57:57 IST" duration-ms="8178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@789d8fd6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatephoenpeOrderMessage -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:57 IST" name="teardown" finished-at="2024-03-05T16:57:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatephoenpeOrderMessage status=SUCCESS method=LoginGoogleUPIPaidTicketTest.validatephoenpeOrderMessage([Ljava.lang.String;)[pri:7, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateRegisterBtn()[pri:8, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:57:57 IST" name="validateRegisterBtn" finished-at="2024-03-05T16:58:27 IST" duration-ms="30023" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[@onclick='return OpenCompleteProfile(this);']"}
  (Session info: chrome=122.0.6261.95)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'WINDOWS-I42JNHR', ip: '192.168.0.111', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 122.0.6261.95, chrome: {chromedriverVersion: 121.0.6167.184 (057a8ae7deb..., userDataDir: C:\Users\COREVA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49703}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d1c0289b7503816c5f00a4dcbc0d9db4
*** Element info: {Using=xpath, value=//button[@onclick='return OpenCompleteProfile(this);']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[@onclick='return OpenCompleteProfile(this);']"}
  (Session info: chrome=122.0.6261.95)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'WINDOWS-I42JNHR', ip: '192.168.0.111', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 122.0.6261.95, chrome: {chromedriverVersion: 121.0.6167.184 (057a8ae7deb..., userDataDir: C:\Users\COREVA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49703}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d1c0289b7503816c5f00a4dcbc0d9db4
*** Element info: {Using=xpath, value=//button[@onclick='return OpenCompleteProfile(this);']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.isDisplayed(Unknown Source)
at com.pages.LoginWithExistingEmailUpiPayment.verifyCompleteRegisterbutton(LoginWithExistingEmailUpiPayment.java:177)
at com.testscripts.LoginGoogleUPIPaidTicketTest.validateRegisterBtn(LoginGoogleUPIPaidTicketTest.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegisterBtn -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:58:27 IST" name="teardown" finished-at="2024-03-05T16:58:27 IST" duration-ms="169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegisterBtn status=FAILURE method=LoginGoogleUPIPaidTicketTest.validateRegisterBtn()[pri:8, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateOrderIdVip()[pri:9, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:58:28 IST" name="validateOrderIdVip" finished-at="2024-03-05T16:58:28 IST" duration-ms="924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdVip -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214]" started-at="2024-03-05T16:58:28 IST" name="teardown" finished-at="2024-03-05T16:58:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderIdVip status=SUCCESS method=LoginGoogleUPIPaidTicketTest.validateOrderIdVip()[pri:9, instance:com.testscripts.LoginGoogleUPIPaidTicketTest@1e6a3214] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testscripts.LoginGoogleUPIPaidTicketTest -->
      <class name="com.testscripts.LoginGoogleTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:56:50 IST" name="setup" finished-at="2024-03-05T16:56:55 IST" duration-ms="4723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateDisablemail_google([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:56:56 IST" name="validateDisablemail_google" data-provider="dataFetch" finished-at="2024-03-05T16:57:09 IST" duration-ms="12753" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@54d46c8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.pages.LoginWithGoogle.VerifyGooglesignIn(LoginWithGoogle.java:167)
at com.testscripts.LoginGoogleTests.validateDisablemail_google(LoginGoogleTests.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisablemail_google -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:09 IST" name="teardown" finished-at="2024-03-05T16:57:09 IST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDisablemail_google status=FAILURE method=LoginGoogleTests.validateDisablemail_google([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateWhatsappConfigEnable([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:09 IST" name="ValidateWhatsappConfigEnable" data-provider="dataFetch" finished-at="2024-03-05T16:57:09 IST" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3ae87e38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateWhatsappConfigEnable -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:09 IST" name="teardown" finished-at="2024-03-05T16:57:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateWhatsappConfigEnable status=SUCCESS method=LoginGoogleTests.ValidateWhatsappConfigEnable([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateTicketForAttendee_google([Ljava.lang.String;)[pri:3, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:09 IST" name="validateTicketForAttendee_google" data-provider="dataFetch" finished-at="2024-03-05T16:57:09 IST" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@42734b71]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketForAttendee_google -->
        <test-method signature="validateOrderSuccessMessage()[pri:4, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:09 IST" name="validateOrderSuccessMessage" finished-at="2024-03-05T16:57:23 IST" duration-ms="13674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderSuccessMessage -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:09 IST" name="teardown" finished-at="2024-03-05T16:57:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketForAttendee_google status=SUCCESS method=LoginGoogleTests.validateTicketForAttendee_google([Ljava.lang.String;)[pri:3, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:23 IST" name="teardown" finished-at="2024-03-05T16:57:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderSuccessMessage status=SUCCESS method=LoginGoogleTests.validateOrderSuccessMessage()[pri:4, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateViewTicketUrl_google()[pri:5, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:23 IST" name="validateViewTicketUrl_google" finished-at="2024-03-05T16:57:24 IST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateViewTicketUrl_google -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:24 IST" name="teardown" finished-at="2024-03-05T16:57:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateViewTicketUrl_google status=SUCCESS method=LoginGoogleTests.validateViewTicketUrl_google()[pri:5, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="ValidateRegUrl_google()[pri:6, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:24 IST" name="ValidateRegUrl_google" finished-at="2024-03-05T16:57:25 IST" duration-ms="1432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateRegUrl_google -->
        <test-method signature="ValidateOrderId_google()[pri:7, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:25 IST" name="ValidateOrderId_google" finished-at="2024-03-05T16:57:26 IST" duration-ms="995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateOrderId_google -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:25 IST" name="teardown" finished-at="2024-03-05T16:57:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateRegUrl_google status=SUCCESS method=LoginGoogleTests.ValidateRegUrl_google()[pri:6, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:26 IST" name="teardown" finished-at="2024-03-05T16:57:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateOrderId_google status=SUCCESS method=LoginGoogleTests.ValidateOrderId_google()[pri:7, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateBuyerDetails_google([Ljava.lang.String;)[pri:8, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:26 IST" name="validateBuyerDetails_google" data-provider="dataFetch" finished-at="2024-03-05T16:57:27 IST" duration-ms="616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@20f6b6e0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBuyerDetails_google -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:27 IST" name="teardown" finished-at="2024-03-05T16:57:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBuyerDetails_google status=SUCCESS method=LoginGoogleTests.validateBuyerDetails_google([Ljava.lang.String;)[pri:8, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="validateRegistration_google([Ljava.lang.String;)[pri:9, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:27 IST" name="validateRegistration_google" data-provider="dataFetch" finished-at="2024-03-05T16:57:30 IST" duration-ms="3045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@348bd063]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistration_google -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.testscripts.LoginGoogleTests@6340e5f0]" started-at="2024-03-05T16:57:30 IST" name="teardown" finished-at="2024-03-05T16:57:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegistration_google status=SUCCESS method=LoginGoogleTests.validateRegistration_google([Ljava.lang.String;)[pri:9, instance:com.testscripts.LoginGoogleTests@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testscripts.LoginGoogleTests -->
      <class name="com.testscripts.LoginWithNewMailUpiPayTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:00:56 IST" name="setup" finished-at="2024-03-05T17:01:00 IST" duration-ms="3941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="ValidateSigninWithNewEmail_upiPay([Ljava.lang.String;)[pri:1, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:00 IST" name="ValidateSigninWithNewEmail_upiPay" data-provider="emailtestdata" finished-at="2024-03-05T17:01:01 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@51aa2a58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateSigninWithNewEmail_upiPay -->
        <test-method signature="ValidateCoupon_Email([Ljava.lang.String;)[pri:2, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:01 IST" name="ValidateCoupon_Email" data-provider="emailtestdata" finished-at="2024-03-05T17:01:02 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@4ae6451d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateCoupon_Email -->
        <test-method signature="validateCouponRemove()[pri:3, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:02 IST" name="validateCouponRemove" finished-at="2024-03-05T17:01:02 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponRemove -->
        <test-method signature="ValidateEmailDisable_Email()[pri:4, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:02 IST" name="ValidateEmailDisable_Email" finished-at="2024-03-05T17:01:02 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateEmailDisable_Email -->
        <test-method signature="validateWhatsappCheckbox([Ljava.lang.String;)[pri:5, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:02 IST" name="validateWhatsappCheckbox" data-provider="emailtestdata" finished-at="2024-03-05T17:01:02 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2b06681c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsappCheckbox -->
        <test-method signature="validateAttendeeEmail([Ljava.lang.String;)[pri:6, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:02 IST" name="validateAttendeeEmail" data-provider="emailtestdata" finished-at="2024-03-05T17:01:02 IST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@66130c3b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAttendeeEmail -->
        <test-method signature="validatePaymentUrl()[pri:7, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:02 IST" name="validatePaymentUrl" finished-at="2024-03-05T17:01:03 IST" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentUrl -->
        <test-method signature="validatePhonepe()[pri:8, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:03 IST" name="validatePhonepe" finished-at="2024-03-05T17:01:06 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePhonepe -->
        <test-method signature="validateAmazonPe()[pri:9, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:06 IST" name="validateAmazonPe" finished-at="2024-03-05T17:01:06 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmazonPe -->
        <test-method signature="validatephoenpeOrderMessage([Ljava.lang.String;)[pri:10, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:06 IST" name="validatephoenpeOrderMessage" data-provider="emailtestdata" finished-at="2024-03-05T17:01:14 IST" duration-ms="8538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5f32ab17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatephoenpeOrderMessage -->
        <test-method signature="validateRegisterBtn()[pri:11, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:14 IST" name="validateRegisterBtn" finished-at="2024-03-05T17:01:14 IST" duration-ms="51" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at com.pages.LoginWithExistingEmailUpiPayment.verifyCompleteRegisterbutton(LoginWithExistingEmailUpiPayment.java:178)
at com.testscripts.LoginWithNewMailUpiPayTest.validateRegisterBtn(LoginWithNewMailUpiPayTest.java:113)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegisterBtn -->
        <test-method signature="validateOrderIdVip()[pri:12, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:14 IST" name="validateOrderIdVip" finished-at="2024-03-05T17:01:15 IST" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdVip -->
        <test-method signature="validateOrderIdFree()[pri:13, instance:com.testscripts.LoginWithNewMailUpiPayTest@738dc9b]" started-at="2024-03-05T17:01:15 IST" name="validateOrderIdFree" finished-at="2024-03-05T17:01:16 IST" duration-ms="805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderIdFree -->
      </class> <!-- com.testscripts.LoginWithNewMailUpiPayTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
